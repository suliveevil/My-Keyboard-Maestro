{
	"UID": "A3BF8B0A-56F0-4E33-A35D-7F18CBC05E8C",
	"Actions": [
		{
			"MacroActionType": "Comment",
			"Title": "BBEdit required",
			"IsDisclosed": false,
			"StyledText": "\n\t\t\t\t\t\t\t41E4D515-C065-4C24-9859-EA2479C52CC9\n\t\t\t\t\t\t\tcnRmZAAAAAADAAAAAgAA\n\t\t\t\t\t\t\tAAcAAABUWFQucnRmAQAA\n\t\t\t\t\t\t\tAC5uAAAAKwAAAAEAAABm\n\t\t\t\t\t\t\tAAAAe1xydGYxXGFuc2lc\n\t\t\t\t\t\t\tYW5zaWNwZzEyNTJcY29j\n\t\t\t\t\t\t\tb2FydGYxNDA0XGNvY29h\n\t\t\t\t\t\t\tc3VicnRmNDcwCntcZm9u\n\t\t\t\t\t\t\tdHRibH0Ke1xjb2xvcnRi\n\t\t\t\t\t\t\tbDtccmVkMjU1XGdyZWVu\n\t\t\t\t\t\t\tMjU1XGJsdWUyNTU7fQp9\n\t\t\t\t\t\t\tAQAAACMAAAABAAAABwAA\n\t\t\t\t\t\t\tAFRYVC5ydGYQAAAAcy6w\n\t\t\t\t\t\t\tWbYBAAAAAAAAAAAAAA==\n\t\t\t\t\t\t\t41E4D515-C065-4C24-9859-EA2479C52CC9\n\t\t\t\t\t\t\t"
		},
		{
			"MacroActionType": "Comment",
			"Title": "List Keyboard Maestro Macros with Sub-Macros v1.0(b0002)",
			"ActionName": "Macro Notes",
			"ActionColor": "Aqua",
			"IsDisclosed": false,
			"StyledText": "\n\t\t\t\t\t\t\t41E4D515-C065-4C24-9859-EA2479C52CC9\n\t\t\t\t\t\t\tcnRmZAAAAAADAAAAAgAA\n\t\t\t\t\t\t\tAAcAAABUWFQucnRmAQAA\n\t\t\t\t\t\t\tAC5tBQAAKwAAAAEAAABl\n\t\t\t\t\t\t\tBQAAe1xydGYxXGFuc2lc\n\t\t\t\t\t\t\tYW5zaWNwZzEyNTJcY29j\n\t\t\t\t\t\t\tb2FydGYxNTA0XGNvY29h\n\t\t\t\t\t\t\tc3VicnRmODMwCntcZm9u\n\t\t\t\t\t\t\tdHRibFxmMFxmc3dpc3Nc\n\t\t\t\t\t\t\tZmNoYXJzZXQwIEhlbHZl\n\t\t\t\t\t\t\tdGljYTt9CntcY29sb3J0\n\t\t\t\t\t\t\tYmw7XHJlZDI1NVxncmVl\n\t\t\t\t\t\t\tbjI1NVxibHVlMjU1O30K\n\t\t\t\t\t\t\te1wqXGV4cGFuZGVkY29s\n\t\t\t\t\t\t\tb3J0Ymw7O30KXHBhcmRc\n\t\t\t\t\t\t\tdHg1NjBcdHgxMTIwXHR4\n\t\t\t\t\t\t\tMTY4MFx0eDIyNDBcdHgy\n\t\t\t\t\t\t\tODAwXHR4MzM2MFx0eDM5\n\t\t\t\t\t\t\tMjBcdHg0NDgwXHR4NTA0\n\t\t\t\t\t\t\tMFx0eDU2MDBcdHg2MTYw\n\t\t\t\t\t\t\tXHR4NjcyMFxwYXJkaXJu\n\t\t\t\t\t\t\tYXR1cmFsXHBhcnRpZ2h0\n\t\t\t\t\t\t\tZW5mYWN0b3IwCgpcZjBc\n\t\t\t\t\t\t\tZnMyNCBcY2YwIFwnYjdc\n\t\t\t\t\t\t\tJ2I3XCdiN1wnYjdcJ2I3\n\t\t\t\t\t\t\tXCdiN1wnYjdcJ2I3XCdi\n\t\t\t\t\t\t\tN1wnYjdcJ2I3XCdiN1wn\n\t\t\t\t\t\t\tYjdcJ2I3XCdiN1wnYjdc\n\t\t\t\t\t\t\tJ2I3XCdiN1wnYjdcJ2I3\n\t\t\t\t\t\t\tXCdiN1wnYjdcJ2I3XCdi\n\t\t\t\t\t\t\tN1wnYjdcJ2I3XCdiN1wn\n\t\t\t\t\t\t\tYjdcJ2I3XCdiN1wnYjdc\n\t\t\t\t\t\t\tJ2I3XCdiN1wnYjdcJ2I3\n\t\t\t\t\t\t\tXCdiN1wnYjdcJ2I3XCdi\n\t\t\t\t\t\t\tN1wnYjdcJ2I3XCdiN1wn\n\t\t\t\t\t\t\tYjdcJ2I3XCdiN1wnYjdc\n\t\t\t\t\t\t\tJ2I3XCdiN1wnYjdcJ2I3\n\t\t\t\t\t\t\tXCdiN1wnYjdcJ2I3XCdi\n\t\t\t\t\t\t\tN1wnYjdcJ2I3XCdiN1wn\n\t\t\t\t\t\t\tYjdcJ2I3XCdiN1wnYjdc\n\t\t\t\t\t\t\tJ2I3XCdiN1wnYjdcJ2I3\n\t\t\t\t\t\t\tXCdiN1wnYjdcJ2I3XCdi\n\t\t\t\t\t\t\tN1wnYjdcJ2I3XCdiN1wn\n\t\t\t\t\t\t\tYjdcJ2I3XCdiN1wnYjdc\n\t\t\t\t\t\t\tJ2I3XCdiN1wnYjdcJ2I3\n\t\t\t\t\t\t\tXCdiN1wnYjdcJ2I3XCdi\n\t\t\t\t\t\t\tN1wnYjdcJ2I3XCdiN1wn\n\t\t\t\t\t\t\tYjdcJ2I3XCdiN1wnYjdc\n\t\t\t\t\t\t\tJ2I3XCdiN1wnYjdcJ2I3\n\t\t\t\t\t\t\tXCdiN1wnYjdcJ2I3XCdi\n\t\t\t\t\t\t\tN1wnYjdcJ2I3XCdiN1wn\n\t\t\t\t\t\t\tYjdcJ2I3XCdiN1wnYjdc\n\t\t\t\t\t\t\tJ2I3XCdiN1wKQXV0aG9y\n\t\t\t\t\t\t\tCTogIENocmlzdG9waGVy\n\t\t\t\t\t\t\tIFN0b25lIDxzY3JpcHRt\n\t\t\t\t\t\t\tZWlzdGVyQHRoZXN0b25l\n\t\t\t\t\t\t\tZm9yZ2UuY29tPlwKQ3Jl\n\t\t\t\t\t\t\tYXRlZAk6ICAyMDE4LzEy\n\t\t\t\t\t\t\tLzI2IDA2OjEyXApNb2Rp\n\t\t\t\t\t\t\tZmllZAk6ICAyMDE4LzEy\n\t\t\t\t\t\t\tLzI3IDAyOjEwXApUYWdz\n\t\t\t\t\t\t\tCQk6ICBAY2NzdG9uZSwg\n\t\t\t\t\t\t\tQEtNRm9ydW0sIEBMaXN0\n\t\t\t\t\t\t\tLCBARmluZCwgQE1hY3Jv\n\t\t\t\t\t\t\tcywgQFN1Yi1NYWNyb3Ms\n\t\t\t\t\t\t\tIEBTdWJNYWNyb3NcClZl\n\t\t\t\t\t\t\tcnNpb24JOiAgMS4wKGIw\n\t\t\t\t\t\t\tMDAyKVwKXCdiN1wnYjdc\n\t\t\t\t\t\t\tJ2I3XCdiN1wnYjdcJ2I3\n\t\t\t\t\t\t\tXCdiN1wnYjdcJ2I3XCdi\n\t\t\t\t\t\t\tN1wnYjdcJ2I3XCdiN1wn\n\t\t\t\t\t\t\tYjdcJ2I3XCdiN1wnYjdc\n\t\t\t\t\t\t\tJ2I3XCdiN1wnYjdcJ2I3\n\t\t\t\t\t\t\tXCdiN1wnYjdcJ2I3XCdi\n\t\t\t\t\t\t\tN1wnYjdcJ2I3XCdiN1wn\n\t\t\t\t\t\t\tYjdcJ2I3XCdiN1wnYjdc\n\t\t\t\t\t\t\tJ2I3XCdiN1wnYjdcJ2I3\n\t\t\t\t\t\t\tXCdiN1wnYjdcJ2I3XCdi\n\t\t\t\t\t\t\tN1wnYjdcJ2I3XCdiN1wn\n\t\t\t\t\t\t\tYjdcJ2I3XCdiN1wnYjdc\n\t\t\t\t\t\t\tJ2I3XCdiN1wnYjdcJ2I3\n\t\t\t\t\t\t\tXCdiN1wnYjdcJ2I3XCdi\n\t\t\t\t\t\t\tN1wnYjdcJ2I3XCdiN1wn\n\t\t\t\t\t\t\tYjdcJ2I3XCdiN1wnYjdc\n\t\t\t\t\t\t\tJ2I3XCdiN1wnYjdcJ2I3\n\t\t\t\t\t\t\tXCdiN1wnYjdcJ2I3XCdi\n\t\t\t\t\t\t\tN1wnYjdcJ2I3XCdiN1wn\n\t\t\t\t\t\t\tYjdcJ2I3XCdiN1wnYjdc\n\t\t\t\t\t\t\tJ2I3XCdiN1wnYjdcJ2I3\n\t\t\t\t\t\t\tXCdiN1wnYjdcJ2I3XCdi\n\t\t\t\t\t\t\tN1wnYjdcJ2I3XCdiN1wn\n\t\t\t\t\t\t\tYjdcJ2I3XCdiN1wnYjdc\n\t\t\t\t\t\t\tJ2I3XCdiN1wnYjdcJ2I3\n\t\t\t\t\t\t\tXCdiN1wnYjdcJ2I3XCdi\n\t\t\t\t\t\t\tN1wnYjdcJ2I3XCdiN1wn\n\t\t\t\t\t\t\tYjdcJ2I3XCdiN1wnYjdc\n\t\t\t\t\t\t\tJ2I3fQEAAAAjAAAAAQAA\n\t\t\t\t\t\t\tAAcAAABUWFQucnRmEAAA\n\t\t\t\t\t\t\tABOJJFy2AQAAAAAAAAAA\n\t\t\t\t\t\t\tAAA=\n\t\t\t\t\t\t\t41E4D515-C065-4C24-9859-EA2479C52CC9\n\t\t\t\t\t\t\t"
		},
		{
			"MacroActionType": "ExecuteAppleScript",
			"TrimResults": true,
			"StopOnFailure": false,
			"IncludeStdErr": false,
			"UseText": true,
			"TrimResultsNew": true,
			"TimeOutAbortsMacro": true,
			"Path": "",
			"DisplayKind": "None",
			"IsDisclosed": false,
			"Text": "----------------------------------------------------------------\n# Auth: Christopher Stone\n# dCre: 2018/12/25 15:03\n# dMod: 2018/12/27 02:10\n# Appl: Keyboard Maestro\n# Task: Find macros that use sub-macros and list by name.\n# Libs: None\n# Osax: None\n# Tags: @Applescript, @Script, @Keyboard_Maestro, @Find, @Macros, @Sub-Macros, @SubMacros, @List, @Name\n# Vers: 1.0(b0002)\n----------------------------------------------------------------\nuse AppleScript version \"2.4\"\nuse framework \"Foundation\"\nuse scripting additions\n----------------------------------------------------------------\n\ntry\n\t\n\ttell application \"Keyboard Maestro\"\n\t\t\n\t\tset actionList to actions of macros where its xml contains \"ExecuteMacro\"\n\t\t\n\t\ttry\n\t\t\t\n\t\t\tactionList / 0\n\t\t\t\n\t\ton error errorStr\n\t\t\t\n\t\t\tset macroList to errorStr\n\t\t\tset macroList to (my regexFindWithCapture:\"«class MKma» id \\\"[0-9A-Z-]+\\\"\" fromString:macroList resultTemplate:(\"$0\" & \" of application \\\"Keyboard Maestro\\\"\"))\n\t\t\t\n\t\t\tset tempList to {}\n\t\t\t\n\t\t\trepeat with i in macroList\n\t\t\t\tif contents of i is not in tempList then\n\t\t\t\t\tset end of tempList to contents of i\n\t\t\t\tend if\n\t\t\tend repeat\n\t\t\t\n\t\t\tcopy tempList to macroList\n\t\t\t\n\t\t\tset macroList to my joinList:macroList usingStr:\", \"\n\t\t\tset macroList to \"{\" & macroList & \"}\"\n\t\t\tset macroList to run script macroList\n\t\t\t\n\t\t\tset tempList to {}\n\t\t\t\n\t\t\trepeat with theMacro in macroList\n\t\t\t\t\n\t\t\t\ttell theMacro\n\t\t\t\t\tset end of tempList to its name & \" ⇢ \" & \"Macro Group ⇢ \" & its macro group's name\n\t\t\t\t\tset end of tempList to \"\"\n\t\t\t\t\tset actionXML to (xml of its actions whose xml contains \"ExecuteMacro\")\n\t\t\t\t\tset actionXML to (my joinList:actionXML usingStr:linefeed)\n\t\t\t\t\tset uuidList to (my regexFindWithCapture:\"<string>ExecuteMacro</string>\\\\n\\\\h*<key>MacroUID</key>\\\\n\\\\h*<string>([0-9A-Z-]+)</string>\" fromString:actionXML resultTemplate:\"$1\")\n\t\t\t\t\t\n\t\t\t\t\trepeat with i in uuidList\n\t\t\t\t\t\tset macroName to getMacroNameFromUUID(i) of me\n\t\t\t\t\t\tset end of tempList to tab & \"❖ \" & macroName\n\t\t\t\t\tend repeat\n\t\t\t\t\t\n\t\t\t\tend tell\n\t\t\t\t\n\t\t\t\tset end of tempList to \"\"\n\t\t\t\t\n\t\t\tend repeat\n\t\t\t\n\t\t\tset reportStr to my joinList:tempList usingStr:linefeed\n\t\t\t\n\t\t\tbbeditNewDoc(reportStr, \"activate\") of me\n\t\t\t\n\t\tend try\n\t\t\n\tend tell\n\t\non error e number n\n\tset e to e & return & return & \"Num: \" & n\n\tif n ≠ -128 then\n\t\ttry\n\t\t\ttell application (path to frontmost application as text) to set ddButton to button returned of ¬\n\t\t\t\t(display dialog e with title \"ERROR!\" buttons {\"Copy Error Message\", \"Cancel\", \"OK\"} ¬\n\t\t\t\t\tdefault button \"OK\" giving up after 30)\n\t\t\tif ddButton = \"Copy Error Message\" then set the clipboard to e\n\t\tend try\n\tend if\nend try\n\n----------------------------------------------------------------\n--» HANDLERS\n----------------------------------------------------------------\non bbeditNewDoc(_text, _activate)\n\ttell application \"BBEdit\"\n\t\tset newDoc to make new document with properties {text:_text, bounds:{0, 44, 1920, 1200}}\n\t\ttell newDoc\n\t\t\tselect insertion point before its text\n\t\tend tell\n\t\tif _activate = true or _activate = 1 or _activate = \"activate\" then activate\n\tend tell\nend bbeditNewDoc\n----------------------------------------------------------------\non cngStr:findString intoString:replaceString inString:dataString\n\tset anNSString to current application's NSString's stringWithString:dataString\n\tset dataString to (anNSString's stringByReplacingOccurrencesOfString:findString withString:replaceString ¬\n\t\toptions:(current application's NSRegularExpressionSearch) range:{0, length of dataString}) as text\nend cngStr:intoString:inString:\n----------------------------------------------------------------\non getMacroNameFromUUID(macroUUID)\n\ttell application \"Keyboard Maestro Engine\"\n\t\treturn process tokens \"%MacroNameForUUID%\" & macroUUID & \"%\"\n\tend tell\nend getMacroNameFromUUID\n----------------------------------------------------------------\non joinList:theList usingStr:theStr\n\tset anNSArray to current application's NSArray's arrayWithArray:theList\n\tset theString to anNSArray's componentsJoinedByString:theStr\n\treturn theString as text\nend joinList:usingStr:\n----------------------------------------------------------------\non regexFindWithCapture:thePattern fromString:theString resultTemplate:templateStr\n\tset theString to current application's NSString's stringWithString:theString\n\tset theRegEx to current application's NSRegularExpression's regularExpressionWithPattern:thePattern options:0 |error|:(missing value)\n\tset theFinds to theRegEx's matchesInString:theString options:0 range:{0, theString's |length|()}\n\tset theResult to current application's NSMutableArray's array()\n\t\n\trepeat with aFind in theFinds\n\t\tset foundString to (theRegEx's replacementStringForResult:aFind inString:theString |offset|:0 template:templateStr)\n\t\t(theResult's addObject:foundString)\n\tend repeat\n\t\n\treturn theResult as list\n\t\nend regexFindWithCapture:fromString:resultTemplate:\n----------------------------------------------------------------\non splitString:someText withString:mySeparator usingRegex:regexFlag ignoringCase:caseFlag ignoringDiacrits:diacritsFlag\n\t-- build options\n\tset theOptions to 0\n\tif caseFlag then set theOptions to (current application's NSCaseInsensitiveSearch)\n\tif regexFlag then\n\t\tset theOptions to theOptions + (current application's NSRegularExpressionSearch as integer)\n\telse -- ignoring diacriticals only applies if not doing regex\n\t\tif diacritsFlag then set theOptions to theOptions + (current application's NSDiacriticInsensitiveSearch as integer)\n\tend if\n\tset theString to current application's NSString's stringWithString:someText\n\tif theOptions = 0 then -- simplest case: literal, considering case and ignoring diacrits\n\t\tset theList to theString's componentsSeparatedByString:mySeparator\n\telse\n\t\tset theList to {} -- to hold strings\n\t\t-- get length and set some intital variables\n\t\tset theFullLength to theString's |length|()\n\t\tset theLength to theFullLength\n\t\tset theStart to 0\n\t\trepeat\n\t\t\t-- look for range of next match\n\t\t\tset theRange to theString's rangeOfString:mySeparator options:theOptions range:{location:theStart, |length|:theLength}\n\t\t\tif theRange's |length|() = 0 then -- no match found, so grab the whole string then exit repeat\n\t\t\t\tset end of theList to (theString's substringWithRange:{location:theStart, |length|:theLength}) as text\n\t\t\t\texit repeat\n\t\t\tend if\n\t\t\t-- grab the text before the match\n\t\t\tset end of theList to (theString's substringWithRange:{location:theStart, |length|:(location of theRange) - theStart}) as text\n\t\t\t-- reset values for next search\n\t\t\tset theStart to current application's NSMaxRange(theRange) -- straight after the match\n\t\t\tset theLength to theFullLength - theStart\n\t\tend repeat\n\tend if\n\treturn theList as list\nend splitString:withString:usingRegex:ignoringCase:ignoringDiacrits:\n----------------------------------------------------------------",
			"NotifyOnFailure": false
		}
	],
	"CreationDate": 567518867.646759,
	"IsActive": false,
	"ModificationDate": 574959090.396524,
	"Triggers": [
		{
			"FireType": "Pressed",
			"KeyCode": 122,
			"Modifiers": 0,
			"MacroTriggerType": "HotKey"
		}
	],
	"Name": "List Keyboard Maestro Macros with Sub-Macros v1.0(b0002)"
}