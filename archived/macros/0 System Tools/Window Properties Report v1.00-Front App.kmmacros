<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<array>
	<dict>
		<key>Activate</key>
		<string>Normal</string>
		<key>CreationDate</key>
		<real>568433732.67700803</real>
		<key>Macros</key>
		<array>
			<dict>
				<key>Actions</key>
				<array>
					<dict>
						<key>ActionColor</key>
						<string>Aqua</string>
						<key>ActionName</key>
						<string>Macro Notes</string>
						<key>MacroActionType</key>
						<string>Comment</string>
						<key>StyledText</key>
						<data>
						cnRmZAAAAAADAAAAAgAAAAcAAABU
						WFQucnRmAQAAAC6iBQAAKwAAAAEA
						AACaBQAAe1xydGYxXGFuc2lcYW5z
						aWNwZzEyNTJcY29jb2FydGYxNTA0
						XGNvY29hc3VicnRmODMwCntcZm9u
						dHRibFxmMFxmc3dpc3NcZmNoYXJz
						ZXQwIEhlbHZldGljYTt9CntcY29s
						b3J0Ymw7XHJlZDI1NVxncmVlbjI1
						NVxibHVlMjU1O30Ke1wqXGV4cGFu
						ZGVkY29sb3J0Ymw7O30KXHBhcmRc
						dHg1NjBcdHgxMTIwXHR4MTY4MFx0
						eDIyNDBcdHgyODAwXHR4MzM2MFx0
						eDM5MjBcdHg0NDgwXHR4NTA0MFx0
						eDU2MDBcdHg2MTYwXHR4NjcyMFxw
						YXJkaXJuYXR1cmFsXHBhcnRpZ2h0
						ZW5mYWN0b3IwCgpcZjBcZnMyNCBc
						Y2YwIFwnYjdcJ2I3XCdiN1wnYjdc
						J2I3XCdiN1wnYjdcJ2I3XCdiN1wn
						YjdcJ2I3XCdiN1wnYjdcJ2I3XCdi
						N1wnYjdcJ2I3XCdiN1wnYjdcJ2I3
						XCdiN1wnYjdcJ2I3XCdiN1wnYjdc
						J2I3XCdiN1wnYjdcJ2I3XCdiN1wn
						YjdcJ2I3XCdiN1wnYjdcJ2I3XCdi
						N1wnYjdcJ2I3XCdiN1wnYjdcJ2I3
						XCdiN1wnYjdcJ2I3XCdiN1wnYjdc
						J2I3XCdiN1wnYjdcJ2I3XCdiN1wn
						YjdcJ2I3XCdiN1wnYjdcJ2I3XCdi
						N1wnYjdcJ2I3XCdiN1wnYjdcJ2I3
						XCdiN1wnYjdcJ2I3XCdiN1wnYjdc
						J2I3XCdiN1wnYjdcJ2I3XCdiN1wn
						YjdcJ2I3XCdiN1wnYjdcJ2I3XCdi
						N1wnYjdcJ2I3XCdiN1wnYjdcJ2I3
						XCdiN1wnYjdcJ2I3XCdiN1wnYjdc
						J2I3XCdiN1wnYjdcJ2I3XCdiN1wn
						YjdcJ2I3XCdiN1wnYjdcJ2I3XCdi
						N1wnYjdcJ2I3XCdiN1wnYjdcJ2I3
						XCdiN1wnYjdcJ2I3XCdiN1wKQXV0
						aG9yCTogIENocmlzdG9waGVyIFN0
						b25lIDxzY3JpcHRtZWlzdGVyQHRo
						ZXN0b25lZm9yZ2UuY29tPlwKQ3Jl
						YXRlZAk6ICAyMDE4LzEyLzA1IDEz
						OjEzXApNb2RpZmllZAk6ICAyMDE4
						LzEyLzA1IDEzOjEzXApUYWdzCQk6
						ICBAY2NzdG9uZSwgQEtNRm9ydW0s
						IEBGcm9udCwgQEFwcGxpY2F0aW9u
						LCBAV2luZG93LCBASW5mb3JtYXRp
						b24sIEBQcm9wZXJ0aWVzLCBAUmVw
						b3J0IEBTeXN0ZW1fRXZlbnRzLCBA
						VHJvdWJsZXNob290aW5nLCBAVG9v
						bFwKVmVyc2lvbgk6ICAxLjAwXApc
						J2I3XCdiN1wnYjdcJ2I3XCdiN1wn
						YjdcJ2I3XCdiN1wnYjdcJ2I3XCdi
						N1wnYjdcJ2I3XCdiN1wnYjdcJ2I3
						XCdiN1wnYjdcJ2I3XCdiN1wnYjdc
						J2I3XCdiN1wnYjdcJ2I3XCdiN1wn
						YjdcJ2I3XCdiN1wnYjdcJ2I3XCdi
						N1wnYjdcJ2I3XCdiN1wnYjdcJ2I3
						XCdiN1wnYjdcJ2I3XCdiN1wnYjdc
						J2I3XCdiN1wnYjdcJ2I3XCdiN1wn
						YjdcJ2I3XCdiN1wnYjdcJ2I3XCdi
						N1wnYjdcJ2I3XCdiN1wnYjdcJ2I3
						XCdiN1wnYjdcJ2I3XCdiN1wnYjdc
						J2I3XCdiN1wnYjdcJ2I3XCdiN1wn
						YjdcJ2I3XCdiN1wnYjdcJ2I3XCdi
						N1wnYjdcJ2I3XCdiN1wnYjdcJ2I3
						XCdiN1wnYjdcJ2I3XCdiN1wnYjdc
						J2I3XCdiN1wnYjdcJ2I3XCdiN1wn
						YjdcJ2I3XCdiN1wnYjdcJ2I3XCdi
						N1wnYjdcJ2I3XCdiN1wnYjdcJ2I3
						XCdiN1wnYjdcJ2I3XCdiN1wnYjdc
						J2I3XCdiN1wnYjd9AQAAACMAAAAB
						AAAABwAAAFRYVC5ydGYQAAAAhSUI
						XLYBAAAAAAAAAAAAAA==
						</data>
						<key>Title</key>
						<string>Front Application ? Window Properties Report v1.00</string>
					</dict>
					<dict>
						<key>DisplayKind</key>
						<string>Window</string>
						<key>IncludeStdErr</key>
						<false/>
						<key>MacroActionType</key>
						<string>ExecuteAppleScript</string>
						<key>NotifyOnFailure</key>
						<false/>
						<key>Path</key>
						<string></string>
						<key>StopOnFailure</key>
						<false/>
						<key>Text</key>
						<string>----------------------------------------------------------------
# Auth: Christopher Stone
# dCre: 2018/12/04 16:33
# dMod: 2018/12/05 13:16
# Appl: System Events
# Task: Report Properties of all Windows of the Frontmost Application
# Libs: None
# Osax: None
# Tags: @Applescript, @Script, @ASObjC, @System_Events, @Report, @Properties,@Windows, @Frontmost, @Application
----------------------------------------------------------------
use AppleScript version "2.4"
use framework "Foundation"
use scripting additions
----------------------------------------------------------------
set shCMD to "#!/usr/bin/env bash

read -r -d '' asCmdStr &lt;&lt;'EOF'
	set tempList to {}

	tell application \"System Events\"

		# set theApp to first application process whose name is \"BBEdit\"
		set theApp to first application process whose frontmost is true

		tell theApp to set winProps to properties of windows
	
		repeat with i in winProps
			set end of tempList to contents of i
			set end of tempList to linefeed
		end repeat
	
		return tempList
	
	end tell
EOF

osascript -e \"$asCmdStr\"
"

tell application "System Events"
	set appName to name of (get first process whose frontmost is true)
end tell

set collatorList to {}

set shellScriptResult to do shell script shCMD
set winRecList to its cngStr:"(?m)^,\\h+" intoString:"" inString:shellScriptResult
set winRecList to its cngStr:"\\A\\s+|\\s+\\Z" intoString:"" inString:winRecList
set winRecList to paragraphs of winRecList

set _pad to "0000000000"
set _sep to "-------------------------------------------------------------------------------------------"
set _cntr to 0
set padLength to (length of (characters of (length of winRecList as text)))
if padLength = 1 then set padLength to 2

repeat with i in winRecList
	set _cntr to _cntr + 1
	set paddedCntr to text -1 thru -padLength of (_pad &amp; _cntr as text)
	set tempStr to contents of i
	set tempStr to (its cngStr:", (?=[[:alpha:]])" intoString:linefeed inString:i)
	set tempStr to (its cngStr:",\\s+\\Z" intoString:"" inString:tempStr)
	set tempStr to (its cngStr:"" intoString:"" inString:tempStr)
	set tempStr to (its cngStr:"(?m)^entire contents:\\R" intoString:"" inString:tempStr)
	set tempStr to (its cngStr:"(?m)^([^:]+):" intoString:("$1" &amp; tab &amp; ":" &amp; tab) inString:tempStr)
	set tempStr to (its cngStr:"missing value" intoString:"zzzz$0" inString:tempStr)
	set tempStr to (its cngStr:"\\R" intoString:linefeed inString:tempStr)
	
	set tempStr to (its cngStr:"(?m-s)^name(?=\\h)" intoString:("Window " &amp; paddedCntr) inString:tempStr)
	
	set shCMD to "echo " &amp; quoted form of tempStr &amp; " | sort -f --field-separator=$'\\t' -k3 | column -t -s$'\\t'"
	set tempStr to do shell script shCMD without altering line endings
	set tempStr to (its cngStr:"zzzzmissing value" intoString:"missing value" inString:tempStr)
	
	set windowName to (its reMatch:"(?m-s)^Window.+" inText:tempStr)
	
	if length of windowName = 1 then
		set windowName to item 1 of windowName
	else
		error "reMatch handler failed!"
	end if
	
	set tempStr to (its cngStr:"(?m)^Window.+?$\\R" intoString:"" inString:tempStr)
	set tempStr to _sep &amp; linefeed &amp; windowName &amp; linefeed &amp; _sep &amp; linefeed &amp; linefeed &amp; tempStr
	
	set end of collatorList to tempStr
	
end repeat

set AppleScript's text item delimiters to linefeed
set collatorList to collatorList as text
set collatorList to _sep &amp; linefeed &amp; linefeed &amp; appName &amp; space &amp; "-- Window Properties Report -- " &amp; paddedCntr &amp; " Windows Listed" &amp; linefeed &amp; linefeed &amp; collatorList &amp; linefeed

return collatorList

----------------------------------------------------------------
--? HANDLERS
----------------------------------------------------------------
on cngStr:findString intoString:replaceString inString:dataString
	set anNSString to current application's NSString's stringWithString:dataString
	set dataString to (anNSString's stringByReplacingOccurrencesOfString:findString withString:replaceString ?
		options:(current application's NSRegularExpressionSearch) range:{0, length of dataString}) as text
end cngStr:intoString:inString:
----------------------------------------------------------------
on reMatch:findPattern inText:theText
	set theNSString to current application's NSString's stringWithString:theText
	set theOptions to ((current application's NSRegularExpressionDotMatchesLineSeparators) as integer) + ((current application's NSRegularExpressionAnchorsMatchLines) as integer)
	set theRegEx to current application's NSRegularExpression's regularExpressionWithPattern:findPattern options:theOptions |error|:(missing value)
	set theFinds to theRegEx's matchesInString:theNSString options:0 range:{location:0, |length|:theNSString's |length|()}
	set theFinds to theFinds as list -- so we can loop through
	set theResult to {} -- we will add to this
	
	repeat with i from 1 to count of items of theFinds
		set theRange to (item i of theFinds)'s range()
		set end of theResult to (theNSString's substringWithRange:theRange) as string
	end repeat
	
	return theResult
	
end reMatch:inText:
----------------------------------------------------------------</string>
						<key>TimeOutAbortsMacro</key>
						<true/>
						<key>TrimResults</key>
						<true/>
						<key>TrimResultsNew</key>
						<true/>
						<key>UseText</key>
						<true/>
					</dict>
				</array>
				<key>CreationDate</key>
				<real>565729931.68534803</real>
				<key>ModificationDate</key>
				<real>568434114.74532199</real>
				<key>Name</key>
				<string>Window Properties Report v1.00-Front App</string>
				<key>Triggers</key>
				<array>
					<dict>
						<key>MacroTriggerType</key>
						<string>TypedString</string>
						<key>SimulateDeletes</key>
						<true/>
						<key>TypedString</key>
						<string>£¡windowa</string>
					</dict>
					<dict>
						<key>FireType</key>
						<string>Pressed</string>
						<key>KeyCode</key>
						<integer>34</integer>
						<key>MacroTriggerType</key>
						<string>HotKey</string>
						<key>Modifiers</key>
						<integer>6912</integer>
					</dict>
				</array>
				<key>UID</key>
				<string>639D02A8-7E48-4927-89EB-98EF2744188C</string>
			</dict>
		</array>
		<key>Name</key>
		<string>0 System Tools</string>
		<key>ToggleMacroUID</key>
		<string>1292D260-0A4C-4D08-BBC1-20DEF8F31BBD</string>
		<key>UID</key>
		<string>7736958F-1AC0-4A04-9C07-CC1BC5FB38BA</string>
	</dict>
</array>
</plist>
